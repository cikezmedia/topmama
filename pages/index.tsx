import type { NextPage } from 'next';
import Head from 'next/head';
import 'bootstrap/dist/css/bootstrap.min.css';
import { useState } from 'react';
import { AiFillEyeInvisible } from 'react-icons/ai';
import { useForm, SubmitHandler } from 'react-hook-form';
import Router from 'next/router';
import Link from 'next/link';

type FormValues = {
  email: string;
  password: string;
};

const Home: NextPage = () => {
  const [show, setShow] = useState(false);
  const [showMessage, setShowMessage] = useState('');

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<FormValues>();

  const showPass = () => {
    setShow(!show);
  };

  const onSubmit: SubmitHandler<FormValues> = async (data) => {
    /**
     * For a successful registration and API Backend to return
     * status(200), your email must be eve.holt@reqres.in
     *
     * Note that registering with any other email is possible too
     * */
    try {
      const { email }: { email: string } = data;

      if (email === 'eve.holt@reqres.in') {
        const result = await fetch('https://reqres.in/api/register', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
        });
        const send = await result.json();
        localStorage.setItem('user-signup', JSON.stringify(data));
        setShowMessage('Your registration is successful');
        setTimeout(() => {
          Router.push('/login');
        }, 3000);
      } else {
        setShowMessage(
          'your email must be eve.holt@reqres.in in order to enjoy this application.'
        );
      }
    } catch (error) {
      setShowMessage('Registration failed, please try again');
    }
  };

  return (
    <div className='main'>
      <Head>
        <title>React User Assessment App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <main>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div className='container'>
            <h2 className='form-group'>User Registration</h2>
            <p>
              Register a free account to access all the features of this
              assessment app
            </p>
            {showMessage && (
              <div className='alert alert-danger'>{showMessage}</div>
            )}
            <div className='form-row'>
              <div className='col mb-2'>
                <input
                  type='text'
                  className='form-control'
                  placeholder='Email'
                  {...register('email', {
                    required: {
                      value: true,
                      message: 'Email is required',
                    },
                    pattern: {
                      value: /[a-z0-9]+@[a-z]+\.[a-z]{2,3}/,
                      message: 'This is not a valid email',
                    },
                  })}
                />
              </div>
              {errors?.email && (
                <span className='text-danger mb-2'>{errors.email.message}</span>
              )}
              <div className='col pass mt-2'>
                <i className='passalign' onClick={showPass}>
                  <AiFillEyeInvisible />
                </i>
                <input
                  type={show ? 'text' : 'password'}
                  {...register('password', {
                    required: {
                      value: true,
                      message: 'password is required',
                    },
                    pattern: {
                      value:
                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,
                      message: `mixture of alphanumeric, uppercase, a special and atleast 8 characters is required`,
                    },
                  })}
                  className='form-control'
                  placeholder='Password'
                />
              </div>
              {errors?.password && (
                <span className='text-danger mb-2'>
                  {errors.password.message}
                </span>
              )}
              <div className='col mb-2 mt-3'>
                <button type='submit' className='btn btn-primary btn-sm'>
                  Register
                </button>
              </div>
              <Link href='/login'>Already have an account? Login</Link>
            </div>
          </div>
        </form>
      </main>
    </div>
  );
};

export default Home;
