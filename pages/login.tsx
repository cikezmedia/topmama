import type { NextPage } from 'next';
import Head from 'next/head';
import 'bootstrap/dist/css/bootstrap.min.css';
import { useState, useEffect } from 'react';
import { AiFillEyeInvisible } from 'react-icons/ai';
import { useForm, SubmitHandler } from 'react-hook-form';
import Router from 'next/router';

type FormValues = {
  em: string;
  pass: string;
};

const Login: NextPage = () => {
  const [show, setShow] = useState(false);
  const [showMessage, setShowMessage] = useState('');
  const [user, setUser] = useState({
    email: null,
    password: null,
  });

  useEffect(() => {
    const auth = JSON.parse(localStorage.getItem('user-signup')!);
    setUser(auth);
  }, []);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<FormValues>();

  const showPass = () => {
    setShow(!show);
  };

  const onSubmit: SubmitHandler<FormValues> = async (data) => {
    const { em, pass } = data;
    if (user === null) {
      return setShowMessage('No user found, please register first');
    }
    const { email, password } = user;

    try {
      if (em === email && password === pass) {
        const result = await fetch('https://reqres.in/api/login', {
          method: 'POST',
          body: JSON.stringify(user),
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
        });
        const send = await result.json();
        sessionStorage.setItem('token', JSON.stringify(send));
        const expire = Date.now();
        sessionStorage.setItem('expire', JSON.stringify({ expire: expire }));
        Router.push('../user/');
      } else {
        setShowMessage('Login credentials incorrect');
      }
    } catch (error) {
      setShowMessage('Login failed please try again');
    }
  };

  return (
    <div className='main'>
      <Head>
        <title>React User Assessment App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <main>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div className='container'>
            <h2 className='form-group'>User Login</h2>
            <p>
              Login account to access all the features of this assessment app
            </p>
            {showMessage && (
              <div className='alert alert-danger'>{showMessage}</div>
            )}
            <div className='form-row'>
              <div className='col mb-2'>
                <input
                  type='text'
                  className='form-control'
                  placeholder='Email'
                  {...register('em', {
                    required: {
                      value: true,
                      message: 'Email is required',
                    },
                    pattern: {
                      value: /[a-z0-9]+@[a-z]+\.[a-z]{2,3}/,
                      message: 'This is not a valid email',
                    },
                  })}
                />
              </div>
              {errors?.em && (
                <span className='text-danger mb-2'>{errors.em.message}</span>
              )}
              <div className='col pass mt-2'>
                <a className='passalign' onClick={showPass}>
                  <AiFillEyeInvisible />
                </a>
                <input
                  type={show ? 'text' : 'password'}
                  {...register('pass', {
                    required: {
                      value: true,
                      message: 'password is required',
                    },
                    pattern: {
                      value:
                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,
                      message: `mixture of alphanumeric, uppercase, a special and atleast 8 characters is required`,
                    },
                  })}
                  className='form-control'
                  placeholder='Password'
                />
              </div>
              {errors?.pass && (
                <span className='text-danger mb-2'>{errors.pass.message}</span>
              )}
              <div className='col mb-2 mt-3'>
                <button type='submit' className='btn btn-primary btn-sm'>
                  Login
                </button>
              </div>
              <a href='./'>New here? Register</a>
            </div>
          </div>
        </form>
      </main>
    </div>
  );
};

export default Login;
